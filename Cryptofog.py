import pandas as pd
from datetime import datetime, timedelta
import argparse
import os

def analyze_inactive_assets(csv_path, days=180):
    if not os.path.isfile(csv_path):
        print(f"–§–∞–π–ª {csv_path} –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        return

    df = pd.read_csv(csv_path)

    if not {'Asset', 'Date', 'Amount'}.issubset(df.columns):
        print("–û–∂–∏–¥–∞–µ–º—ã–µ —Å—Ç–æ–ª–±—Ü—ã: 'Asset', 'Date', 'Amount'")
        return

    df['Date'] = pd.to_datetime(df['Date'], errors='coerce')
    cutoff_date = datetime.now() - timedelta(days=days)

    recent_activity = df[df['Date'] > cutoff_date]
    all_assets = set(df['Asset'].unique())
    active_assets = set(recent_activity['Asset'].unique())

    inactive_assets = all_assets - active_assets

    print(f"\nüîé –ê–∫—Ç–∏–≤–∞—Ü–∏—è –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ {days} –¥–Ω–µ–π:")
    print(f"  üìà –ê–∫—Ç–∏–≤–Ω—ã–µ –∞–∫—Ç–∏–≤—ã: {len(active_assets)}")
    print(f"  üí§ –ù–µ–∞–∫—Ç–∏–≤–Ω—ã–µ –∞–∫—Ç–∏–≤—ã: {len(inactive_assets)}")

    if inactive_assets:
        print("\nüí§ –°–ø–∏—Å–æ–∫ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö –∞–∫—Ç–∏–≤–æ–≤:")
        for asset in sorted(inactive_assets):
            last_date = df[df['Asset'] == asset]['Date'].max()
            print(f" - {asset}: –ø–æ—Å–ª–µ–¥–Ω–µ–µ –¥–≤–∏–∂–µ–Ω–∏–µ {last_date.date()}")

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="–ü–æ–∏—Å–∫ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç –≤ CSV.")
    parser.add_argument("csv", help="–ü—É—Ç—å –∫ CSV-—Ñ–∞–π–ª—É —Å –∏—Å—Ç–æ—Ä–∏–µ–π —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π.")
    parser.add_argument("--days", type=int, default=180, help="–ü–µ—Ä–∏–æ–¥ –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –≤ –¥–Ω—è—Ö (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 180).")
    args = parser.parse_args()

    analyze_inactive_assets(args.csv, args.days)
